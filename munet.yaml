topology:
  networks-autonumber: true
  dns: "mgmt0"
  networks:
    - name: mgmt0
      ip: 10.0.1.254/24
      nat: true

  nodes:
    - name: r1
      kind: qemu-linux
      connections:
        - to: mgmt0

    - name: r2
      kind: qemu-linux
      connections:
        - to: mgmt0

kinds:
  - name: qemu-linux
    volumes:
      - "%RUNDIR%/%NAME%/s:/tmp/qemu-sock"
    cmd: |
      # Bridge the guest tap0 and host eth0 using IP at .+200
      ip tuntap add tap0 mode tap
      BRIP=$(ip -o address show eth0 | awk 'match($0,/[0-9]+: ([^ \t]+) +inet ([0-9\.]+)\//,ary){print ary[2];}')
      IFS='.' read -ra IPQ <<< "$BRIP"
      echo ${IPQ[*]}
      BRIP=${IPQ[0]}.${IPQ[1]}.${IPQ[2]}.$((IPQ[3] + 200))
      echo ${BRIP}
      ip address flush dev eth0
      ip link add name br0 type bridge
      ip link set dev eth0 master br0
      ip link set dev tap0 master br0
      ip address add $BRIP/24 dev br0
      ip link set dev br0 up
      qemu-system-x86_64 \
        -boot c \
        -m 2049M \
        -kernel /home/chopps/w/ltfs/linux/arch/x86/boot/bzImage \
        -initrd /home/chopps/w/ltfs/buildroot/output/images/rootfs.ext2 \
        -append "root=/dev/ram0 rw console=ttyS0 console=ttyS1 console=ttyS2 acpi=off nokaslr" \
        -nic tap,model=virtio-net-pci,mac=02:00:0a:00:01:0${MUNET_NODENAME#r},ifname=tap0 \
        -serial stdio \
        -serial unix:/tmp/qemu-sock/console,server,nowait \
        -serial unix:/tmp/qemu-sock/console2,server,nowait \
        -monitor unix:/tmp/qemu-sock/monitor,server,nowait \
        -gdb unix:/tmp/qemu-sock/gdbserver,server,nowait \
        -nographic
        # -nic tap,model=virtio-net-pci,mac=02:00:0a:00:01:01,ifname=tap0 \
        # -S :: wait for gdb to connect
        # -drive file=/home/chopps/w/ltfs/buildroot/output/images/rootfs.ext4,format=raw,index=0,media=disk \
        # -net nic,model=virtio,macaddr=02:00:0a:00:01:01 -net tap,ifname=tap0 \
        # -serial stdio -display none
        # -serial stdio -display none
        # -net nic,model=virtio,macaddr=00:00:00:00:00:01 -net tap,ifname=tap0
        # -cpu host -smp 4 -runas qemu -daemonize -vnc 127.0.0.1:1
        # -monitor telnet:127.0.0.1:5801,server,nowait

cli:
  commands:
    - name: ""
      exec: "bash -c '{}'"
      format: "[HOST ...] shell-cmd"
      help: "runs shell-cmd in the namespace"
    - name: "con"
      exec: "socat /dev/stdin,escape=0x1d,rawer unix-connect:/tmp/qemu-sock/console"
      kinds: ["qemu-linux"]
      format: "con HOST [HOST ...]"
      help: "Open terminals on HOST[s] performing count to 10"
      new-window: true
