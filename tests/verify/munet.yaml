topology:
  networks-autonumber: true
  dns: "mgmt0"
  networks:
    - name: mgmt0
      ip: 192.168.0.254/24
      nat: true
    - name: net0
      ip: 10.0.0.254/24
    - name: net1
      ip: 10.0.1.254/24
    - name: net2
      ip: 10.0.2.254/24
  nodes:
    - name: h1
      kind: host
      connections:
        - to: mgmt0
        - to: net0
    - name: r1
      kind: linux
      connections:
        - to: mgmt0
        - to: net0
        - to: net1
          # eth2 is router interconnect
    - name: r2
      kind: vpp
      connections:
        - to: mgmt0
          name: eth0
        - to: net2
          name: eth1
        - to: net1
          # eth2 is router interconnect
          name: eth2
    - name: h2
      kind: host
      connections:
        - to: mgmt0
        - to: net2
kinds:
  #vpp unix { interactive cli-no-banner log /tmp/vpp.log coredump-size unlimited full-coredump gid vpp cli-listen /run/vpp/cli.sock startup-config /tmp/vpp-startup.conf } cpu { main-core 0 workers 5 } api-trace { on } socksvr { default } statseg { default } buffers { buffers-per-numa 30720 } plugins { path /home/chopps/w-share/vpp/build-root/install-vpp-native/vpp/lib/vpp_plugins } dpdk { proc-type primary log-level pmd,debug no-pci no-multi-seg no-tx-checksum-offload vdev eth_af_packet0,iface=eth1 vdev eth_af_packet1,iface=eth2 vdev crypto_aesni_gcm0,max_nb_queue_pairs=48,socket_id=0 } punt { socket /tmp/punt-server.sock }
  # $DPDK_DEVS vdev crypto_aesni_gcm0,max_nb_queue_pairs=48,socket_id=0 }
  - name: vpp
    image: localhost/labn/vpp
    cmd: |
      pwd
      ls
      ip addr
      NETH=$(ls -d /sys/class/net/eth* | wc -l)
      DPDK_DEVS=""
      for ((i=0; i<$NETH; i++)); do
          sysctl -w net.ipv6.conf.eth$i.autoconf=0
          sysctl -w net.ipv6.conf.eth$i.disable_ipv6=1
          ip address flush dev eth$i
          DPDK_DEVS+="vdev eth_af_packet${i},iface=eth${i} "
      done
      vpp unix { interactive cli-no-banner log /tmp/vpp.log gid vpp cli-listen /run/vpp/cli.sock startup-config /tmp/vpp-startup.conf } \
          api-trace { on } socksvr { default } statseg { default } \
          plugins { path /usr/lib/x86_64-linux-gnu/vpp_plugins } \
          dpdk { proc-type primary log-level pmd,debug no-pci no-multi-seg no-tx-checksum-offload \
              $DPDK_DEVS vdev crypto_aesni_mb0,max_nb_queue_pairs=48,socket_id=0 }
      tail -f /dev/null
    volumes:
      - "%NAME%-vpp.conf:/tmp/vpp-startup.conf"
      - /dev/hugepages:/dev/hugepages
  - name: host
    cmd: |
      pwd
      ls
      ip addr
      NETH=$(ls -d /sys/class/net/eth* | wc -l)
      TAPS=""
      for ((i=0; i<$NETH; i++)); do
          sysctl -w net.ipv6.conf.eth$i.autoconf=0
          sysctl -w net.ipv6.conf.eth$i.disable_ipv6=1
      done
      tail -f /dev/null
  - name: linux
    qemu:
      kernel: "%CONFIGDIR%/../../output-linux/arch/x86/boot/bzImage"
      initrd: "%CONFIGDIR%/../../output-buildroot/images/rootfs.cpio.gz"
      cmdline-extra: "acpi=off nokaslr"
      kvm: true
    volumes:
      - "%RUNDIR%/s:/tmp/qemu-sock"

cli:
  commands:
    - name: con
      exec: "socat /dev/stdin,rawer,escape=0x1d,,echo=0,icanon=0 unix-connect:/tmp/qemu-sock/vcon0"
      format: "con HOST [HOST ...]"
      help: "open console on given hosts, * for all"
      new-window: true
    - name: mon
      exec: "socat /dev/stdin,rawer,escape=0x1d,,echo=0,icanon=0 unix-connect:/tmp/qemu-sock/monitor"
      format: "mon HOST [HOST ...]"
      help: "open monitor on given hosts, * for all"
      new-window: true
