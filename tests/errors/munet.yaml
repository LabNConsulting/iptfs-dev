topology:
  networks-autonumber: true
  dns: "mgmt0"
  networks:
    - name: mgmt0
      ip: 192.168.0.254/24
      nat: true
    - name: net0
      ip: 10.0.0.254/24
    - name: net1
      ip: 10.0.1.254/24
    - name: net2
      ip: 10.0.2.254/24
  nodes:
    - name: h1
      kind: host
      connections:
        - to: mgmt0
        - to: net0
    - name: r1
      kind: linux
      connections:
        - to: mgmt0
        - to: net0
        - to: net1
          # eth2 is router interconnect
    - name: r2
      kind: linux
      connections:
        - to: mgmt0
          name: eth0
        - to: net2
          name: eth1
        - to: net1
          # eth2 is router interconnect
          name: eth2
    - name: h2
      kind: host
      cmd: |
        ip link set eth1 mtu 750
        tail -f /dev/null
      connections:
        - to: mgmt0
        - to: net2
kinds:
  - name: host
    cmd: |
      pwd
      ls
      ip addr
      ip link set eth1 mtu 9000
      tail -f /dev/null
  - name: linux
    ssh-intf: eth0
    ssh-key: ../root-key
    cmd: |
      NETH=$(ls -d /sys/class/net/eth* | wc -l)
      TAPS=""
      for ((i=0; i<$NETH; i++)); do
          ip link set eth$i mtu 9000
          ip tuntap add tap$i mode tap
          ip link set tap$i mtu 9000
          BRIP=$(ip -o address show eth$i | awk 'match($0,/[0-9]+: ([^ \t]+) +inet ([0-9\.]+)\//,ary){print ary[2];}')
          IFS='.' read -ra IPQ <<< "$BRIP"
          echo ${IPQ[*]}
          BRIP=${IPQ[0]}.${IPQ[1]}.${IPQ[2]}.$((IPQ[3] + 200))
          echo ${BRIP}
          ip address flush dev eth$i
          ip link add name br$i type bridge
          ip link set br$i mtu 9000
          ip link set dev eth$i master br$i
          ip link set dev tap$i master br$i
          ip address add $BRIP/24 dev br$i
          ip link set dev br$i up
          TAPS+="-nic tap,model=virtio-net-pci,mac=02:00:0a:00:0$i:0${MUNET_NODENAME#r},ifname=tap$i "
      done
      qemu-system-x86_64 \
        -boot c \
        -m 2049M \
        -kernel %CONFIGDIR%/../../linux/arch/x86/boot/bzImage \
        -initrd %CONFIGDIR%/../../buildroot/output/images/rootfs.ext2 \
        -append "root=/dev/ram0 rw console=ttyS0 console=ttyS1 console=ttyS2 console=ttyS3 acpi=off nokaslr loglevel=8" \
        $TAPS \
        -serial stdio \
        -serial unix:/tmp/qemu-sock/console,server,nowait \
        -serial unix:/tmp/qemu-sock/console2,server,nowait \
        -serial unix:/tmp/qemu-sock/replcon,server,nowait \
        -monitor unix:/tmp/qemu-sock/monitor,server,nowait \
        -gdb unix:/tmp/qemu-sock/gdbserver,server,nowait \
        -nographic
    volumes:
      - "%RUNDIR%/%NAME%/s:/tmp/qemu-sock"

cli:
  commands:
    - name: con
      exec: "socat /dev/stdin,rawer,escape=0x1d,,echo=0,icanon=0 unix-connect:/tmp/qemu-sock/console2"
      format: "con HOST [HOST ...]"
      help: "open console on given hosts, * for all"
      new-window: true
    - name: ssh
      exec: "ssh -i ../../root-key -o 'UserKnownHostsFile=/dev/null' -o 'StrictHostKeyChecking=no' {host.intf_addrs['eth0'].ip}"
      format: "ssh HOST [HOST ...]"
      help: "open ssh to given hosts, * for all"
      new-window: true
