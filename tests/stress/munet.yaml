topology:
  networks-autonumber: true
  ipv6-enable: false
  dns: "mgmt0"
  networks:
    - name: mgmt0
      ip: 192.168.0.254/24
      nat: true
    - name: net1
      ip: 10.0.1.0/24
    - name: r1net
      ip: 11.0.0.0/24
    - name: r2net
      ip: 12.0.0.0/24
  nodes:
    - name: trex
      kind: trex
      connections:
        - to: mgmt0
          name: mgmt0
        - to: r1net
          name: eth0
          ip: 11.0.0.1/24
        - to: r2net
          name: eth1
          ip: 12.0.0.1/24
    - name: r1
      kind: linux
      connections:
        - to: mgmt0
        - to: net1
        - to: r1net
          ip: 11.0.0.2/24
    - name: r2
      kind: linux
      connections:
        - to: mgmt0
        - to: net1
        - to: r2net
          ip: 12.0.0.3/24

kinds:
  - name: host
    cmd: |
      pwd
      ls
      ip addr
      tail -f /dev/null
  - name: linux
    # repl_shell:
    #   connect: "socat /dev/stdin,rawer,escape=0x1d,,echo=0,icanon=0 unix-connect:/tmp/qemu-sock/replcon"
    #   user: "root"
    #   setup: |
    #     set +o emacs
    cmd: |
      NETH=$(ls -d /sys/class/net/eth* | wc -l)
      TAPS=""
      for ((i=0; i<$NETH; i++)); do
          ip tuntap add tap$i mode tap
          if (( i == 0 )); then
              BRIP=$(ip -o address show eth$i | awk 'match($0,/[0-9]+: ([^ \t]+) +inet ([0-9\.]+)\//,ary){print ary[2];}')
              IFS='.' read -ra IPQ <<< "$BRIP"
              BRIP=${IPQ[0]}.${IPQ[1]}.${IPQ[2]}.$((IPQ[3] + 200))
          fi
          ip address flush dev eth$i
          ip link add name br$i type bridge
          ip link set dev eth$i master br$i
          ip link set dev tap$i master br$i
          if (( i == 0 )); then
              ip address add $BRIP/24 dev br$i
          fi
          ip link set dev br$i up
          TAPS+="-nic tap,model=virtio-net-pci,mac=02:00:0a:00:0$i:0${MUNET_NODENAME#r},ifname=tap$i "
      done
      qemu-system-x86_64 \
        -boot c \
        -m 2049M \
        -kernel %CONFIGDIR%/../../linux/arch/x86/boot/bzImage \
        -initrd %CONFIGDIR%/../../buildroot/output/images/rootfs.ext2 \
        -append "root=/dev/ram0 rw console=ttyS0 console=ttyS1 console=ttyS2 console=ttyS3 acpi=off nokaslr" \
        $TAPS \
        -serial stdio \
        -serial unix:/tmp/qemu-sock/console,server,nowait \
        -serial unix:/tmp/qemu-sock/console2,server,nowait \
        -serial unix:/tmp/qemu-sock/replcon,server,nowait \
        -monitor unix:/tmp/qemu-sock/monitor,server,nowait \
        -gdb unix:/tmp/qemu-sock/gdbserver,server,nowait \
        -nographic
    volumes:
      - "%RUNDIR%/%NAME%/s:/tmp/qemu-sock"

  - name: trex
    image: quay.io/labn/trex:v2.98
    privileged: true
    cap_add:
      - ALL
    podman:
      extra-args:
        - --sysctl=net.ipv6.conf.all.disable_ipv6=1
        - --sysctl=net.ipv6.conf.all.forwarding=0
        - --sysctl=net.ipv6.conf.default.forwarding=0
    # We can set the mac and remove the IP
    cmd: |
      pwd
      ls
      ip addr
      NETH=$(ls -d /sys/class/net/eth* | wc -l)
      TAPS=""
      for ((i=0; i<$NETH; i++)); do
          ip addr flush dev eth$i
      done
      ip addr
      ./t-rex-64 --cfg /etc/trex_cfg.yaml -v 3 --no-termio --no-scapy-server --iom 0 -i
      tail -f /dev/null
    ports:
      - 8090:8090
      - 4500:4500
      - 4501:4501
    volumes:
      - trex_cfg.yaml:/etc/trex_cfg.yaml
      - v2.98:/trexsrc
      - /dev/hugepages:/dev/hugepages
      - /var/run/systemd/journal/socket:/var/run/systemd/journal/socket
    merge: ["volumes"]

cli:
  commands:
    - name: con
      exec: "socat /dev/stdin,rawer,escape=0x1d,,echo=0,icanon=0 unix-connect:/tmp/qemu-sock/console2"
      format: "con HOST [HOST ...]"
      help: "open console on given hosts, * for all"
      new-window: true
